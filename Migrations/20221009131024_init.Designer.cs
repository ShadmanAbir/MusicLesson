// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicLesson.Models;

#nullable disable

namespace MusicLesson.Migrations
{
    [DbContext(typeof(MusicLessonsDBContext))]
    [Migration("20221009131024_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MusicLesson.Models.Duration", b =>
                {
                    b.Property<int>("DurationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DurationID"), 1L, 1);

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnOrder(2);

                    b.Property<string>("Length")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nchar(5)")
                        .HasColumnOrder(1)
                        .IsFixedLength();

                    b.HasKey("DurationID");

                    b.ToTable("Duration");
                });

            modelBuilder.Entity("MusicLesson.Models.Instrument", b =>
                {
                    b.Property<int>("InstrumentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstrumentID"), 1L, 1);

                    b.Property<string>("InstrumentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(1);

                    b.HasKey("InstrumentID");

                    b.ToTable("Instrument");
                });

            modelBuilder.Entity("MusicLesson.Models.Lessons", b =>
                {
                    b.Property<int>("LessonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LessonID"), 1L, 1);

                    b.Property<int>("DurationID")
                        .HasColumnType("int")
                        .HasColumnOrder(4);

                    b.Property<int>("InstrumentID")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("LessonDateTime")
                        .HasColumnType("datetime")
                        .HasColumnOrder(5);

                    b.Property<int?>("LetterID")
                        .HasColumnType("int")
                        .HasColumnOrder(6);

                    b.Property<int>("StudentID")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("TutorID")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.HasKey("LessonID");

                    b.HasIndex("DurationID");

                    b.HasIndex("InstrumentID");

                    b.HasIndex("LetterID");

                    b.HasIndex("StudentID");

                    b.HasIndex("TutorID");

                    b.HasIndex(new[] { "LessonID" }, "IX_Lessons");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("MusicLesson.Models.Letters", b =>
                {
                    b.Property<int>("LetterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LetterID"), 1L, 1);

                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnOrder(7);

                    b.Property<string>("BSB")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnOrder(6);

                    b.Property<string>("BankAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(5);

                    b.Property<string>("BeginningComment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(3);

                    b.Property<bool>("PaymentStatus")
                        .HasColumnType("bit")
                        .HasColumnOrder(2);

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnOrder(1);

                    b.Property<int>("Semester")
                        .HasColumnType("int")
                        .HasColumnOrder(9);

                    b.Property<string>("Signature")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnOrder(4);

                    b.Property<int>("Term")
                        .HasColumnType("int")
                        .HasColumnOrder(8);

                    b.Property<DateTime>("TermStartDate")
                        .HasColumnType("datetime")
                        .HasColumnOrder(11);

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnOrder(12);

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnOrder(10);

                    b.HasKey("LetterID");

                    b.ToTable("Letters");
                });

            modelBuilder.Entity("MusicLesson.Models.Students", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentID"), 1L, 1);

                    b.Property<DateTime>("DOB")
                        .HasColumnType("date")
                        .HasColumnOrder(3);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(5);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnOrder(1);

                    b.Property<string>("Guardian")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnOrder(4);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("varchar(400)")
                        .HasColumnOrder(2);

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nchar(11)")
                        .HasColumnOrder(6)
                        .IsFixedLength();

                    b.HasKey("StudentID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("MusicLesson.Models.Tutors", b =>
                {
                    b.Property<int>("TutorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TutorID"), 1L, 1);

                    b.Property<string>("TutorName")
                        .IsRequired()
                        .HasMaxLength(600)
                        .IsUnicode(false)
                        .HasColumnType("varchar(600)")
                        .HasColumnOrder(1);

                    b.HasKey("TutorID");

                    b.ToTable("Tutors");
                });

            modelBuilder.Entity("MusicLesson.Models.Lessons", b =>
                {
                    b.HasOne("MusicLesson.Models.Duration", "Duration")
                        .WithMany("Lessons")
                        .HasForeignKey("DurationID")
                        .IsRequired()
                        .HasConstraintName("FK_Lessons_Duration");

                    b.HasOne("MusicLesson.Models.Instrument", "Instrument")
                        .WithMany("Lessons")
                        .HasForeignKey("InstrumentID")
                        .IsRequired()
                        .HasConstraintName("FK_Lessons_Instrument");

                    b.HasOne("MusicLesson.Models.Letters", "Letter")
                        .WithMany("Lessons")
                        .HasForeignKey("LetterID")
                        .HasConstraintName("FK_Lessons_Letters");

                    b.HasOne("MusicLesson.Models.Students", "Student")
                        .WithMany("Lessons")
                        .HasForeignKey("StudentID")
                        .IsRequired()
                        .HasConstraintName("FK_Lessons_Students");

                    b.HasOne("MusicLesson.Models.Tutors", "Tutor")
                        .WithMany("Lessons")
                        .HasForeignKey("TutorID")
                        .IsRequired()
                        .HasConstraintName("FK_Lessons_Tutors");

                    b.Navigation("Duration");

                    b.Navigation("Instrument");

                    b.Navigation("Letter");

                    b.Navigation("Student");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("MusicLesson.Models.Duration", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("MusicLesson.Models.Instrument", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("MusicLesson.Models.Letters", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("MusicLesson.Models.Students", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("MusicLesson.Models.Tutors", b =>
                {
                    b.Navigation("Lessons");
                });
#pragma warning restore 612, 618
        }
    }
}
